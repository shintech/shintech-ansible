- name: check if pypy is locally downloaded
  raw: "stat {{coreos_ansible_role_path}}/files/pypy.tar.bz2"
  register: pypy_downloaded
  become: false
  ignore_errors: True
  delegate_to: 127.0.0.1
  changed_when: false

- name: download pypy locally
  get_url:
    url: "https://bitbucket.org/pypy/pypy/downloads/pypy2-v5.8.0-linux64.tar.bz2"
    dest: "{{coreos_ansible_role_path}}/files/pypy.tar.bz2"
  delegate_to: 127.0.0.1
  when: pypy_downloaded | failed
  
- name: Check if bootstrap is needed
  raw: stat $HOME/.bootstrapped
  register: need_bootstrap
  ignore_errors: True
  changed_when: false

- name: create swap...
  become: yes
  become_method: sudo
  script: swap.sh
  when: need_bootstrap | failed
  
- name: copy pypy to temporary destination
  raw: "scp {{coreos_ansible_role_path}}/files/pypy.tar.bz2 {{ ansible_ssh_user }}@{{inventory_hostname}}:/tmp/pypy.tar.bz2"
  become: false
  delegate_to: 127.0.0.1
  when: need_bootstrap | failed

- name: Run bootstrap.sh
  script: bootstrap.sh
  environment:
    PYTHON_VERSION: "{{ python_version }}"
    PYPY_VERSION: "{{ pypy_version }}"
  when: need_bootstrap | failed

- name: Check if we need to install pip
  shell: "{{ansible_python_interpreter}} -m pip --version"
  register: need_pip
  ignore_errors: True
  changed_when: false
  when: need_bootstrap | failed

- name: Copy get-pip.py
  copy: src=get-pip.py dest=~/get-pip.py
  when: need_pip | failed

- name: Install pip
  shell: "{{ansible_python_interpreter}} ~/get-pip.py"
  when: need_pip | failed

- name: Remove get-pip.py
  file: path=~/get-pip.py state=absent
  when: need_pip | failed

- name: Install pip launcher
  copy: src=runner dest=$HOME/bin/pip mode=0755
  when: need_pip | failed

- name: Set bootstrapped file
  file:
    path: $HOME/.bootstrapped
    state: touch
  changed_when: false

- name: check if we need to install docker-py...
  shell: "{{ansible_python_interpreter}} -m pip show docker"
  register: need_docker
  ignore_errors: True
  changed_when: false
  
- name: install docker-py...
  shell: "{{ansible_python_interpreter}} -m pip install docker"
  when: need_docker | failed
  
- name: check if we need to install docker-compose...
  shell: "{{ansible_python_interpreter}} -m pip show docker-compose"
  register: need_docker_compose
  ignore_errors: True
  changed_when: false
  
- name: install docker-compose...
  shell: "{{ansible_python_interpreter}} -m pip install docker-compose"
  when: need_docker_compose | failed
  
- name: Remove .bashrc...
  file: path=~/.bashrc state=absent
  register: removed_bashrc
  
- name: Copy bashrc.txt...
  copy: src=bashrc.txt dest=~/.bashrc
  when: removed_bashrc 